const { keyboard, removeKeyboard, inlineKeyboard, button  } = require('telegraf').Markup
const { locations } = require('../util/kyiv-region.json')

exports.generateStartKeyboard = () =>
    inlineKeyboard([button.callback('–†–æ–∑–ø–æ—á–∞—Ç–∏', 'start')])

exports.generateDistrictKeyboard = () =>
    inlineKeyboard([
        ...locations.map((location, index) =>
            [button.callback(`‚ûï ${location.district}`, `district${index}`)]),
        [ button.callback('‚úñÔ∏è–í—ñ–¥–º—ñ–Ω–∏—Ç–∏', 'exit') ]
    ])

exports.generateAreaKeyboard = districtNum =>
    inlineKeyboard([
        ...locations[districtNum].areas.map((area, index) =>
            [button.callback(`‚ûï ${area}`, `area${index}`)]),
        [ button.callback('‚úñÔ∏è–í—ñ–¥–º—ñ–Ω–∏—Ç–∏', 'exit') ]
    ])

exports.generateExitKeyboard = () =>
    inlineKeyboard([button.callback('‚úñÔ∏è–í—ñ–¥–º—ñ–Ω–∏—Ç–∏', 'exit')])

exports.generateContactKeyboard = () =>
    keyboard([button.contactRequest('üìû –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å')])

exports.deleteKeyboard = () => removeKeyboard()

exports.generateCommentKeyboard = () =>
    inlineKeyboard([
        [button.callback('‚Ü™Ô∏è–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏', 'skip')],
        [button.callback('‚úñÔ∏è–í—ñ–¥–º—ñ–Ω–∏—Ç–∏', 'exit')]
    ])

exports.generateResumeKeyboard = () =>
    inlineKeyboard([
        [button.callback('‚úî –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏', 'accept')],
        [button.callback('‚úñÔ∏è–í—ñ–¥—Ö–∏–ª–∏—Ç–∏', 'exit')]
    ])